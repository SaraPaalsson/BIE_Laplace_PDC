\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\newlabel{eq:laplace}{{1}{1}{Boundary Integral Equations}{equation.0.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Typical examples of grid-based discretization (left) and BIE discretization (right) of a starfish domain.\relax }}{2}{figure.caption.3}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:disc}{{1}{2}{Typical examples of grid-based discretization (left) and BIE discretization (right) of a starfish domain.\relax }{figure.caption.3}{}}
\newlabel{eq:density}{{2}{2}{Boundary Integral Equations}{equation.0.2}{}}
\newlabel{eq:ulapl}{{3}{2}{Boundary Integral Equations}{equation.0.3}{}}
\newlabel{eq:kernel}{{4}{2}{Boundary Integral Equations}{equation.0.4}{}}
\newlabel{eq:pkrec}{{5}{3}{Boundary Integral Equations}{equation.0.5}{}}
\newlabel{eq:p0}{{6}{3}{Boundary Integral Equations}{equation.0.6}{}}
\newlabel{eq:specQ}{{7}{3}{Boundary Integral Equations}{equation.0.7}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Example of error in domain when solving Laplace's equation, using only normal quadrature, using 35 panels (left) and 70 panels (right).\relax }}{3}{figure.caption.4}}
\newlabel{fig:normquad}{{2}{3}{Example of error in domain when solving Laplace's equation, using only normal quadrature, using 35 panels (left) and 70 panels (right).\relax }{figure.caption.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Error after application of special quadrature, for 35 panels.\relax }}{4}{figure.caption.5}}
\newlabel{fig:specquad}{{3}{4}{Error after application of special quadrature, for 35 panels.\relax }{figure.caption.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Error curves, for normal quadrature, $\qopname  \relax o{log}_{10} e(z) = \{ -15,-12,-9,-6, -3 \}$ (left) and special quadrature (only $\qopname  \relax o{log}_{10} e(z) = -15$ visible) (right).\relax }}{4}{figure.caption.6}}
\newlabel{fig:levelcurves}{{4}{4}{Error curves, for normal quadrature, $\log _{10} e(z) = \{ -15,-12,-9,-6, -3 \}$ (left) and special quadrature (only $\log _{10} e(z) = -15$ visible) (right).\relax }{figure.caption.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Timings serial code for varying $N_{dom}$. Fixed $N_{pan}=20$.\relax }}{6}{figure.caption.10}}
\newlabel{fig:serial1}{{5}{6}{Timings serial code for varying $N_{dom}$. Fixed $N_{pan}=20$.\relax }{figure.caption.10}{}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces D1 and D2 cache hit and miss ratios for serial code, $N_{dom} = 1600$. Data generated by CrayPAT.\relax }}{6}{table.caption.13}}
\newlabel{tab:batch4_serial_caches}{{1}{6}{D1 and D2 cache hit and miss ratios for serial code, $N_{dom} = 1600$. Data generated by CrayPAT.\relax }{table.caption.13}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Number of function calls and times for serial code $N_{dom} = 1600$, $N_{pan} = 20$.\relax }}{7}{figure.caption.12}}
\newlabel{fig:batch4_serial_pie}{{6}{7}{Number of function calls and times for serial code $N_{dom} = 1600$, $N_{pan} = 20$.\relax }{figure.caption.12}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Number of function calls and times for serial code $N_{dom} = 1600$, $N_{pan} = 20$.\relax }}{7}{figure.caption.14}}
\newlabel{fig:batch10_serial_pie}{{7}{7}{Number of function calls and times for serial code $N_{dom} = 1600$, $N_{pan} = 20$.\relax }{figure.caption.14}{}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces D1 and D2 cache hit and miss ratios for serial code, $N_{dom} = 3276800$. Data generated by CrayPAT.\relax }}{8}{table.caption.15}}
\newlabel{tab:batch10_serial_caches}{{2}{8}{D1 and D2 cache hit and miss ratios for serial code, $N_{dom} = 3276800$. Data generated by CrayPAT.\relax }{table.caption.15}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Strong scaling results for OpenMP-parallelized code, $N_{dom}=15\cdot 10^6$.\relax }}{9}{figure.caption.19}}
\newlabel{fig:omp_strongtime}{{8}{9}{Strong scaling results for OpenMP-parallelized code, $N_{dom}=15\cdot 10^6$.\relax }{figure.caption.19}{}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces D1 and D2 cache hit and miss ratios for OpenMP-parallelized code, $N_{dom} = 15\cdot 10^6$. Number of threads $32$. Data generated by CrayPAT.\relax }}{9}{table.caption.20}}
\newlabel{tab:openmp_caches}{{3}{9}{D1 and D2 cache hit and miss ratios for OpenMP-parallelized code, $N_{dom} = 15\cdot 10^6$. Number of threads $32$. Data generated by CrayPAT.\relax }{table.caption.20}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Number of function calls and times for OpenMP-parallelized code $N_{dom} = 15\cdot 10^6$, $N_{pan} = 20$.\relax }}{10}{figure.caption.21}}
\newlabel{fig:omp_strong_pie}{{9}{10}{Number of function calls and times for OpenMP-parallelized code $N_{dom} = 15\cdot 10^6$, $N_{pan} = 20$.\relax }{figure.caption.21}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Weak scaling results for OpenMP-parallelized code, $N_{dom}/thread=4\cdot 10^5$.\relax }}{11}{figure.caption.23}}
\newlabel{fig:omp_weaktime}{{10}{11}{Weak scaling results for OpenMP-parallelized code, $N_{dom}/thread=4\cdot 10^5$.\relax }{figure.caption.23}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Strong scaling results for MPI-parallelized code, $N_{dom}=15\cdot 10^6$.\relax }}{12}{figure.caption.26}}
\newlabel{fig:mpi_strongtime}{{11}{12}{Strong scaling results for MPI-parallelized code, $N_{dom}=15\cdot 10^6$.\relax }{figure.caption.26}{}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces D1 and D2 cache hit and miss ratios for MPI-parallelized code, $N_{dom} = 15\cdot 10^6$, for $32$ MPI-processes. Data generated by CrayPAT.\relax }}{12}{table.caption.28}}
\newlabel{tab:mpi_caches}{{4}{12}{D1 and D2 cache hit and miss ratios for MPI-parallelized code, $N_{dom} = 15\cdot 10^6$, for $32$ MPI-processes. Data generated by CrayPAT.\relax }{table.caption.28}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Load imbalance time for \texttt  {specialquadlapl}, for MPI-parallelized code, strong and weak scaling.\relax }}{13}{figure.caption.27}}
\newlabel{fig:mpi_loadimb}{{12}{13}{Load imbalance time for \code {specialquadlapl}, for MPI-parallelized code, strong and weak scaling.\relax }{figure.caption.27}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Number of function calls and times for MPI-parallelized code $N_{dom} = 15\cdot 10^6$, $N_{pan} = 20$.\relax }}{14}{figure.caption.29}}
\newlabel{fig:mpi_pie}{{13}{14}{Number of function calls and times for MPI-parallelized code $N_{dom} = 15\cdot 10^6$, $N_{pan} = 20$.\relax }{figure.caption.29}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces Weak scaling results for MPI-parallelized code, $N_{dom}/thread=4\cdot 10^5$.\relax }}{14}{figure.caption.31}}
\newlabel{fig:mpi_weaktime}{{14}{14}{Weak scaling results for MPI-parallelized code, $N_{dom}/thread=4\cdot 10^5$.\relax }{figure.caption.31}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces Timings for hybrid code, $N_{dom}=15\cdot 10^6$.\relax }}{15}{figure.caption.33}}
\newlabel{fig:hybrid}{{15}{15}{Timings for hybrid code, $N_{dom}=15\cdot 10^6$.\relax }{figure.caption.33}{}}
\@writefile{toc}{\contentsline {section}{\numberline {A}Algorithms}{16}{appendix.A}}
\newlabel{sec:alg}{{A}{16}{Algorithms}{appendix.A}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces Computing complex density $\mu (z)$, for all $z\in \delta \Omega $.\relax }}{16}{algocf.1}}
\newlabel{alg:solveDensity}{{1}{16}{Algorithms}{algocf.1}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces Computing solution to Laplace's equation $u$, for all $\tau \in \Omega $.\relax }}{16}{algocf.2}}
\newlabel{alg:compU}{{2}{16}{Algorithms}{algocf.2}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces Computing solution to Laplace's equation $u$ with special quadrature, for all $\tau \in \Omega $.\relax }}{17}{algocf.3}}
\newlabel{alg:specQ}{{3}{17}{Algorithms}{algocf.3}{}}
